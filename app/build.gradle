plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.rsoumail.mymemories"
        minSdk 24
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.rsoumail.mymemories.utils.TestApplicationRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

        reports {
            xml.required = false
            html.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }

        def fileFilter = [
                '**/R.class',
                '**/R$*.class',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                '**/*Test*.*',
                'android/**/*.*',
                '**/utils/*.*', 'com/rsoumaila/**/MyMemoriesSharedPreferences.*']
        def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
        def mainSrc = "${project.projectDir}/src/main/java"

        sourceDirectories.setFrom(files([mainSrc]))
        classDirectories.setFrom(files([debugTree]))
        executionData.setFrom(fileTree(dir: "$buildDir", includes: [
                "jacoco/testDebugUnitTest.exec",
                "outputs/code-coverage/connected/*coverage.ec"
        ]))
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            useJUnitPlatform()
            jacoco {
                //includeNoLocationClasses = true
            }
        }
    }




    packagingOptions {
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }

    allprojects {
       // apply plugin: 'jacoco'
        configurations.all {
            resolutionStrategy.force 'org.objenesis:objenesis:2.6'
            resolutionStrategy {
                eachDependency { details ->
                    if ('org.jacoco' == details.requested.group) {
                        details.useVersion "0.8.7"
                    }
                }
            }
        }


    }

}

dependencies {

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    // Koin for Android
    implementation "io.insert-koin:koin-android:$koin_version"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.google.code.gson:gson:$gson_version"
    //Gson Converter
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    testImplementation 'org.junit.jupiter:junit-jupiter'

    //implementation 'androidx.test:core-ktx:1.4.0'
    // Glide v4 uses this new annotation processor -- see https://bumptech.github.io/glide/doc/generatedapi.html
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    //Facebook shimmer
    implementation "com.facebook.shimmer:shimmer:$shimmer_version"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    implementation "androidx.room:room-runtime:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    kapt  "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    implementation "androidx.paging:paging-runtime:$paging_version"
    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"
    //testImplementation "junit:junit:$junit_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Koin testing tools
    androidTestImplementation "io.insert-koin:koin-test:$koin_version"
    // Needed JUnit version
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"

    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //androidTestImplementation 'androidx.test:runner:1.4.0'
    //androidTestImplementation 'androidx.test:rules:1.4.0'

    implementation 'androidx.test:runner:1.4.0'
    implementation 'androidx.test:rules:1.4.0'

    //For runBlockingTest, CoroutineDispatcher etc.
    //androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    //testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
    //testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    testImplementation "io.mockk:mockk:$mockk_verion"
    androidTestImplementation "io.mockk:mockk-android:$mockk_verion"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    testImplementation "io.insert-koin:koin-test-junit5:$koin_version"
    androidTestImplementation "io.insert-koin:koin-test-junit5:$koin_version"

    // testImplementation for pure JVM unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // androidTestImplementation for Android instrumentation tests
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"



}